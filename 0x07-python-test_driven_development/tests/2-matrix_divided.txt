==========================
Usage `2-matrix_divided.py
==========================

Defines a matrix division fct ```2-matrix_divided``

Usage
=====

```2-matrix_divided`` divides matrix elts by div.

import:
	>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Normal matrix:
	>>> matrix_divided([[2, 7, 9], [1, 6, 3]], 3)
	[[0.67, 2.33, 3.0], [0.33, 2.0, 1.0]]

Empty matrix:
	>>> matrix_divided([[]], 10)
	Traceback (most recent call last):
	...
	TypeError: matrix must be a matrix (list of lists) of integers/floats

Unmodified matrix:
	>>> m = [[2, 7, 9], [1, 6, 3]]
	>>> matrix_divided(m, 3)
	[[0.67, 2.33, 3.0], [0.33, 2.0, 1.0]]
	>>> m[1][1]
	2

Div by zero:
	>>> matrix_divided([[2, 7, 9], [1, 6, 3]], 0)
	Traceback (most recent call last):
	...
	ZeroDivisionError: division by zero

Div by NaN:
	>>> matrix_divided([[2, 7, 9], [1, 6, 3]], float('nan'))
	[[nan, nan, nan], [nan, nan, nan]]

Div by infinity:
	>>> matrix_divided([[2, 7, 9], [1, 6, 3]], float('inf'))
	[[0.0, 0.0, 0.0], [0.0, 0.0, 0.0]]

Div by negative:
	>>> matrix_divided([[2, 7, 9], [1, 6, 3]], -3)
	[[-0.67, -2.33, -3.0], [-0.33, -2.0, -1.0]]

One elt matrix:
	>>> matrix_divided([[6]], 3)
	[[2.0]]

Matrix as None:
	>>> matrix_divided(none, 1)
	Traceback (most recent call last):
	...
	NameError: name 'none' is not defined

Matrix with diff rows:
	>>> matrix_divided([[4, 7, 8], [6, 4]], 3)
	Traceback (most recent call last):
	...
	TypeError: Each row of the matrix must have the same size

Matrix with not nbr:
	>>> matrix_divided([[2, 7, 9], [1, 6, "alx"]], 3)
	Traceback (most recent call last):
	...
	TypeError: matrix must be a matrix (list of lists) of integers/floats

Missing args:
	>>> matrix_divided()
	Traceback (most recent call last):
	...
	TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'
